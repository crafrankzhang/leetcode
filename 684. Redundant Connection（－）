int findParent(vector<int>& parent, int k) {
    if (parent[k] != k) 
        parent[k] = findParent(parent, parent[k]);
    return parent[k];
}

vector<int> findRedundantConnection(vector<vector<int> >& edges) {
    vector<int> parent;
    for (int i = 0; i < 2001; i++)  // 初始化
        parent.push_back(i);

    int point1, point2;
    for (int j = 0; j < edges.size(); j++) {
        point1 = findParent(parent, edges[j][0]);
        point2 = findParent(parent, edges[j][1]);
        if (point1 == point2)
            return edges[j];
        parent[point2] = point1;
    }
    return vector<int>(0, 0);
}