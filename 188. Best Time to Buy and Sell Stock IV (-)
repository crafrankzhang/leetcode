public int maxProfit(int k, int[] prices) {
        if(prices==null || prices.length<=1) return 0;
        int len = prices.length;
        if (k>len/2){ // simple case
            int res = 0;
            for (int i=1; i<len; ++i){
                if(prices[i] > prices[i-1])
                    res += prices[i] - prices[i-1];
            }
            return res;
        }
        int[] hold = new int[k+1];
        int[] sold = new int[k+1];
        Arrays.fill(hold, Integer.MIN_VALUE);
        for(int price : prices) {
            for(int j=1; j<=k; j++) {
                hold[j] = Math.max(hold[j], sold[j-1]-price); // hold->hold, sold->hold
                sold[j] = Math.max(sold[j], hold[j]+price); // sold->sold, hold->sold
            }
        }
        return sold[k];
    }